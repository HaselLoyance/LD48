<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPlayer</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>sprDot</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x1 = 0
y1 = 0
part = noone
anim=0
alpha=1
portal_reached=false


ps = part_system_create()
particle = part_type_create()

part_type_shape(particle, pt_shape_explosion)
part_type_size(particle, objWorld.player_step * 0.0025, objWorld.player_step * 0.01, -0.005, 0)
part_type_alpha2(particle, 0.5, 0.0)
part_type_direction(particle, 0, 360, 0, 3)
part_type_speed(particle, 2, 3.5, 0,0)
part_type_life(particle, 40, 55);
part_type_orientation(particle,0,359,-1,0,true);

emitter = part_emitter_create(ps)
part_emitter_region(
    ps,
    emitter,
    objWorld.player_step * 0.2,
    objWorld.player_step * 0.8,
    objWorld.player_step * 0.5,
    objWorld.player_step * 0.7,
    ps_shape_ellipse,
    ps_distr_gaussian,
)
//part_emitter_stream(ps, emitter, particle, -10)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>part_type_destroy(particle)
part_emitter_destroy(ps, emitter)
part_system_destroy(ps)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>     instance_destroy()
     
     if instance_exists(objPortal)
     {
        with objPortal
        {
part_type_direction(particle, 80, 100, 0, 2)
part_type_speed(particle, 0.9, 1.5, 0,0)
part_type_life(particle, 40, 55);
        }
     
     }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>show_debug_message("FIRED!")
      with(objWorld){event_user(0)}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// this alarm is for delay before transition on level success
        with(objWorld){event_user(1)}
        
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
part_system_position(ps, x, y)

//show_debug_message(x)
if objWorld.part_dragged == noone and (part == noone or (!part.animation_lock)) and !portal_reached
{
    temp = scrGetPlayersPart(x+6,y+6)
    if temp != noone and temp != part 
    {
       if (x1 &gt;= part.part_width)
       {
            x1 = 0
       }
       else if x1 &lt; 0
       {
            x1 = part.part_width - objWorld.player_step
       }

       if (y1 &gt;= part.part_height)
       {
            y1 = 0
       }
       else if y1 &lt; 0
       {
            y1 = part.part_height - objWorld.player_step
       }
       part = temp
    }
    else if temp == noone
    {
        audio_play_sound(sndDeath, 0, false)
        alarm[1] = 45 // this alarm is for delay before transition on level fail
        alarm[3] = 80
        part_emitter_burst(ps, emitter, particle, 30)
        alpha = 1
        portal_reached = true
        exit
    }
    diff_y = 0
    diff_x = 0
    
    if keyboard_check_pressed(vk_up) || keyboard_check_pressed(ord("W"))
    {
        if not place_meeting(x, y - objWorld.player_step, objWall) and not place_meeting(x, y -objWorld.player_step, objPlayer)
        {
            diff_y -= objWorld.player_step
        }
    }
    
    if keyboard_check_pressed(vk_down) || keyboard_check_pressed(ord("S"))
    {
        if not place_meeting(x, y + objWorld.player_step, objWall)  and not place_meeting(x, y +objWorld.player_step, objPlayer)
        {
            diff_y += objWorld.player_step
        }
    }
    
    if keyboard_check_pressed(vk_left) || keyboard_check_pressed(ord("A"))
    {
        if not place_meeting(x - objWorld.player_step, y, objWall)  and not place_meeting(x -objWorld.player_step, y, objPlayer)
        {
            diff_x -= objWorld.player_step
        }
    }
    
    if keyboard_check_pressed(vk_right) || keyboard_check_pressed(ord("D"))
    {
        if not place_meeting(x + objWorld.player_step, y, objWall)  and not place_meeting(x +objWorld.player_step, y, objPlayer)
        {
            diff_x += objWorld.player_step
        }
    }
    
    x1+= diff_x
    y1+=diff_y
 
    if abs(diff_x) &gt; 0 or abs(diff_y) &gt; 0 and !audio_is_playing(sndPlayerWalk)
    {
        audio_play_sound(sndPlayerWalk, 0, false)   
    }

}

if part != noone
{
    x = part.x + x1
    y = part.y + y1
}

    
if place_meeting(x,y, objPortal) and objWorld.part_dragged == noone and (part == noone or (!part.animation_lock)) and not portal_reached
{
    audio_play_sound(sndPortalEnter, 0, false)
    with (objPortal) { event_user(0)}
    if instance_number(objPlayer) &gt; 1
    {
        alpha = 1
        portal_reached = true
        alarm[2] = 30
    exit
    }
    else
    {
        alarm[0] = 30 // this alarm is for delay before transition on level success
        alpha = 1
        alarm[2] = 30
        portal_reached = true
        exit
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
/*if part != noone
{
x = part.x + x1
y = part.y + y1
}
else
{
//x = x1
//y = y1
}*/

if part and !portal_reached{
   alpha = part.alpha
}
else if !portal_reached
    alpha = 1
anim += 0.1

if portal_reached
{
   alpha -= 0.03
   alpha = max(0, alpha)

}
draw_sprite_ext(
sprite_index,
anim mod image_number,
x,
y + sin(anim) * 2,

objWorld.player_step / sprite_width,
objWorld.player_step / sprite_width ,
0,
c_white,
alpha
)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
