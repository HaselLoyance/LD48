<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>randomize();
playfield_size = 1024
top_left = room_width/2 - playfield_size/2
tree_depth = 1
fullscreen = true

part_width = 0
part_height = 0
parts_per_row = 0
parts_per_col = 0
player_step = 0
part_dragged = noone
part_hovered = noone

if fullscreen
{
    width = display_get_width()
    height = display_get_height()
}
else
{
    width = 850
    height = 650
}

level1_sprite_list = ds_list_create()
level2_sprite_list = ds_list_create()
level3_sprite_list = ds_list_create()
level4_sprite_list = ds_list_create()
level5_sprite_list = ds_list_create()

ds_list_add(level1_sprite_list, sprLevel1)

ds_list_add(level2_sprite_list, sprLevel2_1)
ds_list_add(level2_sprite_list, sprLevel2_2)

ds_list_add(level3_sprite_list, sprLevel3_1)
ds_list_add(level3_sprite_list, sprLevel3_2)
ds_list_add(level3_sprite_list, sprLevel3_3)
ds_list_add(level3_sprite_list, sprLevel3_4)


ds_list_add(level4_sprite_list, sprLevel4_1)
ds_list_add(level4_sprite_list, sprLevel4_2)
ds_list_add(level4_sprite_list, sprLevel4_3)
ds_list_add(level4_sprite_list, sprLevel4_4)
ds_list_add(level4_sprite_list, sprLevel4_5)
ds_list_add(level4_sprite_list, sprLevel4_6)
ds_list_add(level4_sprite_list, sprLevel4_7)
ds_list_add(level4_sprite_list, sprLevel4_8)
ds_list_shuffle(level4_sprite_list)

ds_list_add(level5_sprite_list, sprLevel5_1)
ds_list_add(level5_sprite_list, sprLevel5_2)
ds_list_add(level5_sprite_list, sprLevel5_3)
ds_list_add(level5_sprite_list, sprLevel5_4)
ds_list_add(level5_sprite_list, sprLevel5_5)
ds_list_add(level5_sprite_list, sprLevel5_6)
ds_list_add(level5_sprite_list, sprLevel5_7)
ds_list_add(level5_sprite_list, sprLevel5_8)
ds_list_add(level5_sprite_list, sprLevel5_9)
ds_list_add(level5_sprite_list, sprLevel5_10)
ds_list_add(level5_sprite_list, sprLevel5_11)
ds_list_add(level5_sprite_list, sprLevel5_12)
ds_list_add(level5_sprite_list, sprLevel5_13)
ds_list_add(level5_sprite_list, sprLevel5_14)
ds_list_add(level5_sprite_list, sprLevel5_15)
ds_list_add(level5_sprite_list, sprLevel5_16)

ds_list_shuffle(level5_sprite_list)

ready_to_destroy = false
end_reached = false

parts_list = ds_list_create()

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// screen setup

if fullscreen
{
    window_set_fullscreen(true)
}
else
{
    window_set_size(width, height)
    window_center()
}

texture_set_interpolation(true)
surface_resize(application_surface, width, height);
    
//show_debug_overlay(true)


ratio = width / height

view_xport[0] = 0
view_yport[0] = 0
view_wport[0] = width
view_hport[0] = height

view_wview[0] = playfield_size * ratio
view_hview[0] = playfield_size
view_xview[0] = room_width/2 - playfield_size * ratio / 2
view_yview[0] = room_height/2 - playfield_size / 2
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_list_destroy(level1_sprite_list)
ds_list_destroy(level2_sprite_list)
ds_list_destroy(level3_sprite_list)
ds_list_destroy(level4_sprite_list)
ds_list_destroy(level5_sprite_list)
ds_list_destroy(parts_list)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ready_to_destroy = true
event_user(0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_user(0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// transition to the prev level
tree_depth = max(tree_depth - 1, 1)
event_user(0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///transition to the next level
if tree_depth == 5
   end_reached = true
tree_depth = min(tree_depth + 1, 5)
event_user(0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// depth change


if !ready_to_destroy
{
    if end_reached
    {
        ds_list_shuffle(parts_list)
        for (var i = 0; i &lt; ds_list_size(parts_list); i++)
        {
            part = ds_list_find_value(parts_list, i)
            var c = i;
            with(part) {alarm[1] = c * 20 + 40; wobble_size = 5; wobble_intensity_x = 1; wobble_intensity_y = 1}
        
        }
        alarm[1] = ds_list_size(parts_list) * 20 +80
        exit
    }
    else
    {
        with (objLevelPart)
        {
            animation_lock = true
            animate_goto = true
            
            goto_x = far_x
            goto_y = far_y
            goto_speed = 0.055
            do_not_warp_on_goto_reached = true
        }
        alarm[1] = 40
        exit
    }
}
else if end_reached
{
    ex = instance_create(room_width/2, room_height/2, objExplosion)
    ex.startRadius = 0
    ex.mode = 1
    ex.t = 200
    audio_play_sound(sndPerdej, 0, false)
    exit
}

instance_destroy(objPlayer)
instance_destroy(objPortal)
instance_destroy(objLevelPart)
ds_list_clear(parts_list)

if tree_depth == 1
{
    ls = level1_sprite_list
    obj = objLevel1Part
    part_width = playfield_size
    part_height = playfield_size
    parts_per_row = 1
    parts_per_col = 1
    player_step = 128
}
else if tree_depth == 2
{
    ls = level2_sprite_list
    obj = objLevel2Part
    part_width = playfield_size / 2
    part_height = playfield_size
    parts_per_row = 2
    parts_per_col = 1
    player_step = 64
}
else if tree_depth == 3
{
    ls = level3_sprite_list
    obj = objLevel3Part
    part_width = playfield_size / 2
    part_height = playfield_size / 2
    parts_per_row = 2
    parts_per_col = 2
    player_step = 64
}
else if tree_depth == 4
{
    
    ls = level4_sprite_list
    obj = objLevel4Part
    part_width = playfield_size / 4
    part_height = playfield_size / 2
    parts_per_row = 4
    parts_per_col = 2
    player_step = 32
}
else if tree_depth == 5
{
    ls = level5_sprite_list
    obj = objLevel5Part
    part_width = playfield_size / 4
    part_height = playfield_size / 4
    parts_per_row = 4
    parts_per_col = 4
    player_step = 32
}

if not ds_exists(ls, ds_type_list)
   exit
   
//ds_list_shuffle(ls)

idx = 0
center = room_width / 2
for (var i = 0; i &lt; parts_per_col; i++)
{
    for (var j = 0; j &lt; parts_per_row; j++)
    {
        spr_idx = ds_list_find_value(ls, idx)
        inst = instance_create(0, 0, obj)
        ds_list_add(parts_list, inst)
        
        inst.sprite_index = spr_idx
        show_debug_message(spr_idx)
        inst.part_row = i
        inst.part_col = j
        
        inst.animation_lock = true
        inst.animate_goto = true
        inst.goto_x = top_left + j * part_width
        inst.goto_y = top_left + i * part_height
                
        if inst.goto_x &lt; center - 10 and inst.goto_y &lt; center - 10
        {
            dir = point_direction(inst.goto_x, inst.goto_y, center, center) 
        }
        else if inst.goto_x &gt;= center - 10 and inst.goto_y &lt; center - 10
        {
            dir = point_direction(inst.goto_x+part_width, inst.goto_y, center, center) 
        }
        else if inst.goto_x &lt; center - 10 and inst.goto_y &gt;= center - 10
        {
            dir = point_direction(inst.goto_x, inst.goto_y + part_height, center, center) 
        }
        else if inst.goto_x &gt;= center - 10 and inst.goto_y &gt;= center - 10
        {
            dir = point_direction(inst.goto_x+part_width, inst.goto_y + part_height, center, center) 
        }

        inst.far_x = lengthdir_x(3072, -180 + dir + random_range(-2,2)) + center
        inst.far_y = lengthdir_y(3072, -180 + dir + random_range(-2,2)) + center
        inst.x = inst.far_x
        inst.y = inst.far_y
        
        inst.goto_speed = 0.1
        inst.alarm[0] = 1
        

        idx += 1
    }
}

ready_to_destroy = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// screen setup

    window_set_size(width, height)
    
if fullscreen
{
    window_set_fullscreen(true)
}
else
{
    window_center()
}

texture_set_interpolation(false)
surface_resize(application_surface, width, height);

ratio = width / height

view_xport[0] = 0
view_yport[0] = 0
view_wport[0] = width
view_hport[0] = height

view_wview[0] = playfield_size * ratio
view_hview[0] = playfield_size
view_xview[0] = room_width/2 - playfield_size * ratio / 2
view_yview[0] = room_height/2 - playfield_size / 2
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// room code
if (room == r1)
   alarm[0] = 1
else if room == r0
     instance_create(room_width/2, room_height/2, objExplosion)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="113">
      <action>
        <libid>1</libid>
        <id>331</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_restart_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if room == r1 and !end_reached and !ready_to_destroy
   event_user(0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="34">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>exit
if room = r1  and !end_reached and !ready_to_destroy
event_user(2)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="33">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if room == r1  and !end_reached and !ready_to_destroy
event_user(1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>332</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_end_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
